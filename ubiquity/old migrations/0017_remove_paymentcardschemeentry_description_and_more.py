# Generated by Django 4.0.7 on 2022-10-24 09:58

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def populate_pll(apps, *_):
    # get the models from the app argument passed through the migration
    SchemeAccountEntry = apps.get_model("ubiquity", "SchemeAccountEntry")
    all_sae = SchemeAccountEntry.objects.all()

    scheme_account_index = {}
    for sae in all_sae:
        item = {
            "user": sae.user.id,
            "status": sae.link_status,
        }
        if scheme_account_index.get(sae.scheme_account.id):
            scheme_account_index[sae.scheme_account.id].append(item)
        else:
            scheme_account_index[sae.scheme_account.id] = [item]

    bulk_pll = []
    PllUserAssociation = apps.get_model("ubiquity", "PllUserAssociation")
    PaymentCardSchemeEntry = apps.get_model("ubiquity", "PaymentCardSchemeEntry")
    base_links = PaymentCardSchemeEntry.objects.all().select_related("payment_card_account")
    for base_link in base_links:
        scheme_account_id = base_link.scheme_account.id
        if scheme_account_index.get(scheme_account_id):
            for plluser in scheme_account_index[scheme_account_id]:
                bulk_pll.append(PllUserAssociation(pll=base_link, user__id=plluser["user"]), slug="", state="")


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("ubiquity", "0016_alter_schemeaccountentry_link_status"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="paymentcardschemeentry",
            name="description",
        ),
        migrations.RemoveField(
            model_name="paymentcardschemeentry",
            name="slug",
        ),
        migrations.RemoveField(
            model_name="paymentcardschemeentry",
            name="state",
        ),
        migrations.CreateModel(
            name="PllUserAssociation",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("state", models.IntegerField(choices=[(0, "pending"), (1, "active"), (2, "inactive")], default=0)),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        choices=[
                            ("LOYALTY_CARD_PENDING", "LOYALTY_CARD_PENDING"),
                            ("LOYALTY_CARD_NOT_AUTHORISED", "LOYALTY_CARD_NOT_AUTHORISED"),
                            ("PAYMENT_ACCOUNT_PENDING", "PAYMENT_ACCOUNT_PENDING"),
                            ("PAYMENT_ACCOUNT_INACTIVE", "PAYMENT_ACCOUNT_INACTIVE"),
                            ("PAYMENT_ACCOUNT_AND_LOYALTY_CARD_INACTIVE", "PAYMENT_ACCOUNT_AND_LOYALTY_CARD_INACTIVE"),
                            ("PAYMENT_ACCOUNT_AND_LOYALTY_CARD_PENDING", "PAYMENT_ACCOUNT_AND_LOYALTY_CARD_PENDING"),
                            ("UBIQUITY_COLLISION", "UBIQUITY_COLLISION"),
                        ],
                        default="",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "pll",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ubiquity.paymentcardschemeentry",
                        verbose_name="Associated PLL",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Associated User",
                    ),
                ),
            ],
            options={
                "unique_together": {("pll", "user")},
            },
        ),
        # data population, do not need a reverse as the field will be removed if we un-migrate
        # migrations.RunPython(populate_pll),
    ]

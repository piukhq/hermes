# Generated by Django 2.2.11 on 2020-06-02 09:31

from django.db import migrations

from scheme.models import UbiquityBalanceHandler


def balance_needs_formatting(balance):
    if not balance or len(balance) != 1 or "is_stale" not in balance[0]:
        return False

    return True


def format_balance(account):
    balance = account.balances
    if balance_needs_formatting(balance):
        account.balances = UbiquityBalanceHandler(balance).data
        account.save(update_fields=["balances"])


def format_balances(apps, schema_editor):
    SchemeAccount = apps.get_model("scheme", "SchemeAccount")

    for account in SchemeAccount.objects.exclude(balances={}).all():
        format_balance(account)


def revert_balance(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("scheme", "0075_schemeaccount_transactions"),
    ]

    operations = [
        migrations.RunPython(format_balances, revert_balance),
    ]

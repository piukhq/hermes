# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-02-01 10:00
from __future__ import unicode_literals

import colorful.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    replaces = [('scheme', '0001_initial'), ('scheme', '0002_auto_20150916_1255'), ('scheme', '0003_scheme_forgotten_password_url'), ('scheme', '0004_auto_20150922_1421'), ('scheme', '0005_auto_20150923_1044'), ('scheme', '0005_auto_20150923_1024'), ('scheme', '0006_merge'), ('scheme', '0007_auto_20150923_1403'), ('scheme', '0008_auto_20150924_1059'), ('scheme', '0009_auto_20150924_1239'), ('scheme', '0010_auto_20150925_1304'), ('scheme', '0011_auto_20150928_0907'), ('scheme', '0012_auto_20150929_1524'), ('scheme', '0013_auto_20151005_1350'), ('scheme', '0014_auto_20151006_1351'), ('scheme', '0015_auto_20151006_1632'), ('scheme', '0016_auto_20151007_1632'), ('scheme', '0017_auto_20151012_1328'), ('scheme', '0018_scheme_has_transactions'), ('scheme', '0019_scheme_has_points'), ('scheme', '0020_auto_20151014_0933'), ('scheme', '0021_auto_20151014_1004'), ('scheme', '0022_scheme_barcode_type'), ('scheme', '0023_auto_20151014_1008'), ('scheme', '0024_auto_20151014_1019'), ('scheme', '0025_auto_20151014_1028'), ('scheme', '0026_auto_20151014_1030'), ('scheme', '0027_auto_20151014_1316'), ('scheme', '0028_auto_20151015_1332'), ('scheme', '0029_schemecredentialquestion_encrypt_answer'), ('scheme', '0030_remove_schemecredentialquestion_encrypt_answer'), ('scheme', '0029_auto_20151016_1330'), ('scheme', '0031_merge'), ('scheme', '0032_auto_20151016_1620'), ('scheme', '0033_auto_20151109_1021'), ('scheme', '0034_remove_scheme_point_conversion_rate'), ('scheme', '0035_auto_20151126_1341'), ('scheme', '0036_auto_20151204_1616'), ('scheme', '0037_auto_20160108_1458'), ('scheme', '0038_auto_20160108_1459'), ('scheme', '0039_remove_schemeaccountcredentialanswer_type'), ('scheme', '0040_auto_20160112_1727'), ('scheme', '0041_auto_20160112_1731'), ('scheme', '0042_auto_20160113_1636'), ('scheme', '0043_auto_20160114_1048'), ('scheme', '0044_auto_20160114_1049'), ('scheme', '0045_auto_20160114_1159'), ('scheme', '0046_auto_20160115_1001'), ('scheme', '0047_auto_20160118_1104'), ('scheme', '0048_auto_20160118_1104'), ('scheme', '0049_auto_20160118_1112')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Scheme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(unique=True)),
                ('url', models.URLField()),
                ('company', models.CharField(max_length=200)),
                ('company_url', models.URLField()),
                ('tier', models.IntegerField(choices=[(1, 'Tier 1'), (2, 'Tier 2')])),
                ('scan_message', models.CharField(max_length=100)),
                ('point_name', models.CharField(default='points', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.Category')),
                ('forgotten_password_url', models.URLField(max_length=500)),
                ('identifier', models.CharField(default='id', max_length=30)),
                ('has_transactions', models.BooleanField(default=False)),
                ('has_points', models.BooleanField(default=False)),
                ('colour', colorful.fields.RGBColorField(blank=True, null=True)),
                ('barcode_regex', models.CharField(blank=True, help_text='Regex to map card number to barcode', max_length=100, null=True)),
                ('card_number_regex', models.CharField(blank=True, help_text='Regex to map barcode to card number', max_length=100, null=True)),
                ('barcode_prefix', models.CharField(blank=True, help_text='Prefix to from card number -> barcode mapping', max_length=100, null=True)),
                ('card_number_prefix', models.CharField(blank=True, help_text='Prefix to from barcode -> card number mapping', max_length=100, null=True)),
                ('barcode_type', models.IntegerField(blank=True, choices=[(0, 'CODE128 (B or C)'), (1, 'QrCode'), (2, 'AztecCode'), (3, 'Pdf417'), (4, 'EAN (13)'), (5, 'DataMatrix'), (6, 'ITF (Interleaved 2 of 5)')], null=True)),
            ]
        ),
        migrations.CreateModel(
            name='SchemeAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (2, 'invalid credentials'), (3, 'end site down'), (4, 'deleted'), (5, 'incomplete')], default=5)),
                ('order', models.IntegerField(default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.Scheme')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchemeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_type_code', models.IntegerField()),
                ('size_code', models.CharField(blank=True, max_length=30, null=True)),
                ('strap_line', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('call_to_action', models.CharField(max_length=150)),
                ('order', models.IntegerField()),
                ('status', models.IntegerField(choices=[(0, 'draft'), (1, 'published')], default=0)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='scheme.Scheme')),
                ('image', models.ImageField(default='', upload_to='schemes')),
            ],
        ),
        migrations.CreateModel(
            name='SchemeCredentialQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=250)),
                ('scheme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='scheme.Scheme')),
                ('type', models.CharField(choices=[('username', 'username'), ('card_number', 'card_number'), ('password', 'password'), ('date_of_birth', 'date_of_birth')], default='username', max_length=250)),
                ('order', models.IntegerField(default=0)),
                ('manual_question', models.BooleanField(default=False)),
                ('scan_question', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchemeAccountCredentialAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=250)),
                ('scheme_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheme.SchemeAccount')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='scheme.SchemeCredentialQuestion')),
            ],
        ),
        migrations.AlterModelOptions(
            name='schemeaccount',
            options={'ordering': ['order']},
        ),
        migrations.AlterModelOptions(
            name='schemecredentialquestion',
            options={'ordering': ['order']},
        ),
        migrations.AlterField(
            model_name='scheme',
            name='slug',
            field=models.SlugField(choices=[('tesco', 'Tesco'), ('advantage-card', 'Boots'), ('superdrug', 'Superdrug'), ('shell', 'Shell'), ('morrisons', 'Morrisons'), ('kfc', 'Kfc'), ('costa', 'Costa'), ('cooperative', 'Cooperative')], unique=True),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (2, 'invalid credentials'), (3, 'end site down'), (4, 'deleted'), (5, 'incomplete'), (6, 'account locked on end site'), (7, 'Cannot connect, too many retries'), (8, 'An unknown error has occurred')], default=0),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('user_name', 'user_name'), ('card_number', 'card_number'), ('password', 'password'), ('date_of_birth', 'date_of_birth')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (2, 'invalid credentials'), (3, 'end site down'), (4, 'deleted'), (5, 'incomplete'), (6, 'account locked on end site'), (7, 'Cannot connect, too many retries'), (8, 'An unknown error has occurred'), (9, 'Midas unavailable')], default=0),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='company_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='slug',
            field=models.SlugField(unique=True),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('user_name', 'user name'), ('email', 'email'), ('card_number', 'card number'), ('password', 'password'), ('date_of_birth', 'date of birth')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (403, 'invalid credentials'), (432, 'invalid_mfa'), (530, 'end site down'), (4, 'deleted'), (5, 'incomplete'), (434, 'account locked on end site'), (429, 'Cannot connect, too many retries'), (520, 'An unknown error has occurred'), (9, 'Midas unavailable')], default=0),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='identifier',
            field=models.CharField(blank=True, max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='point_name',
            field=models.CharField(blank=True, default='points', max_length=50, null=True),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='identifier',
            field=models.CharField(blank=True, help_text='Regex identifier for barcode', max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('user_name', 'user name'), ('email', 'email'), ('card_number', 'card number'), ('barcode', 'barcode'), ('password', 'password'), ('date_of_birth', 'date of birth')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (403, 'invalid credentials'), (432, 'invalid_mfa'), (530, 'end site down'), (4, 'deleted'), (5, 'incomplete'), (434, 'account locked on end site'), (429, 'Cannot connect, too many retries'), (520, 'An unknown error has occurred'), (9, 'Midas unavailable'), (10, 'This is a wallet only card')], default=0),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'pending'), (1, 'active'), (403, 'invalid credentials'), (432, 'invalid_mfa'), (530, 'end site down'), (5, 'incomplete'), (434, 'account locked on end site'), (429, 'Cannot connect, too many retries'), (520, 'An unknown error has occurred'), (9, 'Midas unavailable'), (10, 'This is a wallet only card')], default=0),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('user_name', 'user name'), ('email', 'email'), ('card_number', 'card number'), ('barcode', 'barcode'), ('password', 'password'), ('date_of_birth', 'date of birth'), ('postcode', 'postcode')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'Pending'), (1, 'Active'), (403, 'Invalid credentials'), (432, 'Invalid mfa'), (530, 'End site down'), (531, 'IP blocked'), (532, 'Tripped captcha'), (5, 'Incomplete'), (434, 'Account locked on end site'), (429, 'Cannot connect, too many retries'), (520, 'An unknown error has occurred'), (9, 'Midas unavailable'), (10, 'Wallet only card'), (404, 'Agent does not exist on midas'), (533, 'Password expired')], default=0),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('username', 'user name'), ('email', 'email'), ('card_number', 'card number'), ('barcode', 'barcode'), ('password', 'password'), ('place_of_birth', 'place of birth'), ('postcode', 'postcode'), ('memorable_date', 'memorable date'), ('pin', 'pin'), ('last_name', 'last name')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='type',
            field=models.CharField(choices=[('username', 'user name'), ('email', 'email'), ('card_number', 'card number'), ('barcode', 'barcode'), ('password', 'password'), ('place_of_birth', 'place of birth'), ('postcode', 'postcode'), ('memorable_date', 'memorable date'), ('pin', 'pin'), ('last_name', 'last name'), ('favourite_place', 'favourite place')], max_length=250),
        ),
        migrations.AlterField(
            model_name='schemeaccount',
            name='status',
            field=models.IntegerField(choices=[(0, 'Pending'), (1, 'Active'), (403, 'Invalid credentials'), (432, 'Invalid mfa'), (530, 'End site down'), (531, 'IP blocked'), (532, 'Tripped captcha'), (5, 'Please check your scheme account login details.'), (434, 'Account locked on end site'), (429, 'Cannot connect, too many retries'), (520, 'An unknown error has occurred'), (9, 'Midas unavailable'), (10, 'Wallet only card'), (404, 'Agent does not exist on midas'), (533, 'Password expired')], default=0),
        ),
        migrations.AlterModelOptions(
            name='schemeaccount',
            options={'ordering': ['order', '-created']},
        ),
        migrations.AlterField(
            model_name='scheme',
            name='barcode_type',
            field=models.IntegerField(blank=True, choices=[(0, 'CODE128 (B or C)'), (1, 'QrCode'), (2, 'AztecCode'), (3, 'Pdf417'), (4, 'EAN (13)'), (5, 'DataMatrix'), (6, 'ITF (Interleaved 2 of 5)'), (7, 'Code 39')], null=True),
        ),
        migrations.AlterField(
            model_name='schemecredentialquestion',
            name='scheme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='questions', to='scheme.Scheme'),
        ),
        migrations.AlterField(
            model_name='schemeimage',
            name='image_type_code',
            field=models.IntegerField(choices=[(0, 'hero'), (1, 'banner'), (2, 'offers'), (3, 'icon'), (4, 'asset'), (5, 'reference')]),
        ),
        migrations.AlterField(
            model_name='schemeaccountcredentialanswer',
            name='question',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='scheme.SchemeCredentialQuestion'),
        ),
        migrations.AlterUniqueTogether(
            name='schemecredentialquestion',
            unique_together=set([('scheme', 'type')]),
        ),
        migrations.AlterUniqueTogether(
            name='schemeaccountcredentialanswer',
            unique_together=set([('scheme_account', 'question')]),
        ),

    ]



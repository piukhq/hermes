stages:
  - tests
  - build
  - deploy

tests:
  stage: tests
  script:
    - pip3 install -r requirements.txt
    - export HERMES_DATABASE_URL="postgres://postgres@${POSTGRES_PORT_5432_TCP_ADDR}:5432${POSTGRES_NAME}"
    - py.test --cov-report term-missing --cov=.
  services:
    - postgres:9.4.4
  tags:
    - docker

complexity:
  stage: tests
  script:
    - xenon --max-average A --max-modules B --max-absolute B .
  tags:
    - docker

flake8:
  stage: tests
  script:
    - flake8 *
  tags:
    - docker

build-latest:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/hermes:latest" . -f Dockerfile.hermes
    - docker build --pull -t "$CI_REGISTRY/hermes-nginx:latest" . -f Dockerfile.nginx
    - docker push "$CI_REGISTRY/hermes:latest"
  only:
    - develop
  tags:
    - docker

temp-build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/hermes:kube" .
    - docker push "$CI_REGISTRY/hermes:kube"
  only:
    - feature/kubernetes

temp-deploy:
  stage: deploy
  image: binkops.azurecr.io/kubedeployer:latest
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=dev deploystatic
    - kubectl config use-context dev
    - kubectl delete po $(kubectl get --no-headers=true pods -l run=$SERVICE -o custom-columns=:metadata.name)
  when: manual
  only:
    - feature/kubernetes


stages:
  - tests
  - build
  - dev
  - staging
  - preprod
  - prod

tests:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - mkdir -p /root/.ssh
    - echo $DEPLOY_KEY | base64 -d > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - ssh-keyscan git.bink.com > /root/.ssh/known_hosts
    - pipenv install --system --deploy --ignore-pipfile
    - export HERMES_DATABASE_URL="postgres://postgres@${POSTGRES_PORT_5432_TCP_ADDR}:5432${POSTGRES_NAME}"
    - coverage run --source='.' manage.py test -v 2
    - coverage report
  services:
    - postgres:9.6
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust

complexity:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: tests
  image: olympus.azurecr.io/python:3.7
  script:
    - flake8 *

build-develop:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/hermes:latest" .
    - docker push "$CI_REGISTRY/hermes:latest"
  only:
    - develop

build-master:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY/hermes:$CI_COMMIT_TAG" .
    - docker push "$CI_REGISTRY/hermes:$CI_COMMIT_TAG"
  only:
    - tags

tag-develop:
  stage: dev
  image: binkops.azurecr.io/tagbot:latest
  environment: dev
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/hermes:latest" --tag "develop-$CI_COMMIT_SHORT_SHA"
  only:
    - develop

statics-dev:
  stage: dev
  image: binkops.azurecr.io/kubedeployer:latest
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=dev deploystatic
  only:
    - develop

tag-staging:
  stage: staging
  image: binkops.azurecr.io/tagbot:latest
  environment: staging
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/hermes:$CI_COMMIT_TAG" --tag "staging-$CI_COMMIT_TAG"
  only:
    - tags

tag-preprod:
  stage: preprod
  image: binkops.azurecr.io/tagbot:latest
  environment: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/hermes:$CI_COMMIT_TAG" --tag "preprod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags

statics-staging:
  stage: staging
  image: binkops.azurecr.io/kubedeployer:latest
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=staging deploystatic
  only:
    - tags

tag-prod:
  stage: prod
  image: binkops.azurecr.io/tagbot:latest
  environment: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/hermes:$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags

statics-prod:
  stage: prod
  image: binkops.azurecr.io/kubedeployer:latest
  script:
    - bash collectstatic.sh
    - ENVIRONMENT=prod deploystatic
  only:
    - tags

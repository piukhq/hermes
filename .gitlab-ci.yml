stages:
  - tests
  - dev
  - staging
  - performance
  - preprod
  - prod

tests:
  stage: tests
  image: binkhq/python:3.7
  script:
    - apt update && apt -y install git
    - pip install pipenv coverage
    - pipenv install --system --deploy --ignore-pipfile
    - export HERMES_DATABASE_URL="postgres://postgres@${POSTGRES_PORT_5432_TCP_ADDR}:5432${POSTGRES_NAME}"
    - coverage run --source='.' manage.py test -v 2
    - coverage report
  services:
    - postgres:9.6
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust

complexity:
  stage: tests
  image: binkhq/python:3.7
  script:
    - pip install xenon flake8_polyfill
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: tests
  image: binkhq/python:3.7
  script:
    - pip install flake8
    - flake8

dev:
  stage: dev
  environment:
    name: dev
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="develop-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/hermes:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/hermes:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/hermes:$CTAG"
  only:
    - develop

staging:
  stage: staging
  environment:
    name: staging
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="staging-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/hermes:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/hermes:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/hermes:$CTAG"
  only:
    - staging

performance:
  stage: performance
  environment:
    name: performance
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="performance-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/hermes:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/hermes:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/hermes:$CTAG"
  when: manual
  only:
    - performance

preprod:
  stage: preprod
  environment:
    name: preprod
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="preprod-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/hermes:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/hermes:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/hermes:$CTAG"
  when: manual
  only:
    - master

build:
  stage: prod
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="prod-$CI_COMMIT_TAG"
    - docker build --pull -t "$CI_REGISTRY/hermes:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/hermes:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/hermes:$CTAG"
  when: manual
  only:
    - tags

# Generated by Django 4.0.6 on 2022-08-24 10:04

from django.db import migrations, transaction
from django.db.models import Count


@transaction.atomic
def fix_duplcate_cards(apps, schema_editor):
    payment_card_model = apps.get_model("payment_card", "PaymentCardAccount")
    scheme_account_entry = apps.get_model("ubiquity", "PaymentCardSchemeEntry")
    payment_account_entry = apps.get_model("ubiquity", "PaymentCardAccountEntry")

    dupe_fingerprints = (
        payment_card_model.objects.values("fingerprint")
        .annotate(count=Count("fingerprint"))
        .values("fingerprint")
        .order_by()
        .filter(count__gt=1)
    )

    for fingerprint in dupe_fingerprints:
        scheme_accounts = set()
        users = set()

        payment_accounts = (
            payment_card_model.objects.filter(fingerprint=fingerprint["fingerprint"])
            .order_by("-expiry_year", "-expiry_month")
            .all()
        )
        latest_year = payment_accounts[0].expiry_year
        latest_month = payment_accounts[0].expiry_month
        payment_card = payment_card[0]

        # Get objects to soft delete
        to_delete = payment_accounts.filter(expiry_year__lt=latest_year, expiry_month__lt=latest_month)

        for x in to_delete:
            # Get schemes to link and delete PaymentCardSchemeEntry object
            scheme_accounts.add(list(x.paymentcardschemeentry_set.all().values_list("scheme_account__id", flat=True)))
            x.paymentcardschemeentry_set.all().delete()

            # Get users to link and delete PaymentCardAccountEntry
            users.add(list(x.user_set.all().values_list("id")))
            x.paymentcardaccountentry_set.all().delete()

        for scheme in scheme_accounts:
            scheme_account_entry.objects.get_or_create(scheme_account=scheme, payment_card_account=payment_card)

        for user in users:
            payment_account_entry.objects.get_or_create(user=user, payment_card_account=payment_card)


class Migration(migrations.Migration):

    dependencies = [
        ("payment_card", "0057_alter_paymentcard_formatted_images_and_more"),
    ]

    operations = [
        migrations.RunPython(fix_duplcate_cards),
    ]
